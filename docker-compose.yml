version: '3.8'  

# ==============================================
# CONFIGURACIÓN GENERAL DEL PROYECTO
# ==============================================
# Este proyecto está compuesto por varios servicios:
# - Base de datos MySQL para almacenamiento persistente
# - Frontend en Vue.js para la interfaz de usuario
# - Backend en Laravel para la API REST principal
# - API en Node.js para funcionalidades en tiempo real (chat, notificaciones)
# - Adminer para gestión de la base de datos
#
# INSTRUCCIONES DE INSTALACIÓN Y EJECUCIÓN:
# 1. Requisitos previos:
#    - Docker y Docker Compose instalados
#    - Git (para clonar el repositorio)
#
# 2. Pasos de instalación:
#    a. Clonar el repositorio
#    b. Navegar al directorio del proyecto
#    c. Ejecutar 'docker-compose up'
#
# 3. Configuración inicial:
#    - Las dependencias se instalarán automáticamente
#    - La base de datos se inicializará con datos de prueba
#    - Los servicios se iniciarán en el orden correcto
#
# PUNTOS DE ACCESO:
# - Frontend (Vue.js): http://localhost:5173
# - Backend (Laravel): http://localhost:8000
# - API Node.js: http://localhost:4000
# - Adminer (MySQL): http://localhost:9094

services:
  # ==============================================
  # BASE DE DATOS MYSQL
  # ==============================================
  db:
    image: mysql:8.2.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: delidelishare
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      timeout: 20s
      retries: 10

  # ==============================================
  # ADMINER - GESTOR DE BASE DE DATOS
  # ==============================================
  adminer:
    image: adminer
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "9094:8080"

  # ==============================================
  # FRONTEND - VUE.JS
  # ==============================================
  vue-app:
    build: ./front
    working_dir: /app
    volumes:
      - ./front:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      NODE_ENV: development
      VITE_API_URL: "http://node-api:3000/api"
    depends_on:
      db:
        condition: service_healthy

  # ==============================================
  # BACKEND - LARAVEL
  # ==============================================
  laravel:
    build: ./back
    volumes:
      - ./back:/var/www/html
    working_dir: /var/www/html
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: delidelishare
      DB_USERNAME: root
      DB_PASSWORD: root
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "composer install &&
      php artisan key:generate &&
      php artisan migrate:fresh --seed &&
      php artisan serve --host=0.0.0.0 --port=8000"

  # ==============================================
  # API EN TIEMPO REAL - NODE.JS
  # ==============================================
  node-api:
    build: ./node
    working_dir: /app
    volumes:
      - ./node:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: delidelishare
      DB_USER: root
      DB_PASSWORD: root
      PORT: 4000
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "npm install &&
      (npm run dev || npm run start)"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

# ==============================================
# VOLÚMENES
# ==============================================
volumes:
  mysql_data:
    driver: local